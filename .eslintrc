{
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript",
    "plugin:react/jsx-runtime",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "@typescript-eslint", "import", "jsx-a11y", "react-hooks", "prettier", "simple-import-sort"],
  "rules": {
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-non-null-assertion": "off",  
    "react/jsx-uses-vars": "error" ,
    
    "no-unused-vars": [
      "error",
      {
          "varsIgnorePattern": "React"
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "semi": ["warn", "never"],
    "prettier/prettier": [
      "warn",
      {
        "endOfLine": "auto",
        "singleQuote": true
      }
    ],
    "simple-import-sort/exports": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "import/order": "off", // Conflicts with simple-import-sort
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          ["^react$"],
          ["^[a-z]"],
          ["^~/styles"],
          ["^~/assets"],
          ["^~/routes"],
          ["^~/api"],
          ["^~/components"],
          ["^~/ui-kit"],
          ["^~/hooks"],
          ["^~/queries"],
          ["^~/pages"],
          ["^~/stores"],
          ["^~/utils"],
          ["^~/models"],
          ["^~/"],
          ["^"],
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          ["^src"],
          ["^.+\\.validation"],
          ["^.+\\.types"],
          ["^.+\\.styled$"]
        ]
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "pragma": "React"
  }
}
